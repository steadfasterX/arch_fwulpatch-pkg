#!/bin/bash
##############################################################
#
# Generic functions used for FWUL in several places
#
# Usage: source generic.func
#
# Copyright (c) 2017: steadfasterX <steadfasterX | gmail - com >
##############################################################

# echo output and save it in a log as well
F_LOG(){
  # takes 2 arguments (both are mandatory)
  # 1 => Message to log/echo (can handle \t and \n)
  # 2 => Logfile to append that message
  
  MSG="$1"
  WLOG="$2"
  if [ -z "$MSG" ]||[ ! -w "$LOG" ];then
     echo -e "ERROR: missing vars for writing logfile!\nLOG: $LOG\nMSG: $MSG"
  fi

  echo -e "$(date +%F_%T) - $MSG" >> $LOG
}

# echo output and save it in a log as well
F_ECHOLOG(){
  # takes 2 arguments (both are mandatory)
  # 1 => Message to log/echo (can handle \t and \n)
  # 2 => Logfile to append that message
  
  F_LOG "$1" "$LOG"
  echo -e "$1" 
}

# print error message
F_ERR(){
  # takes 2 arguments
  # 1 => Message to log
  # 2 => Logfile for writing

  F_LOG "starting $FUNCNAME" "$LOG"
  F_LOG "ERROR: $1" "$LOG"
}

# exit properly
F_EXIT(){
  # takes 2 arguments (mandantory)
  # 1 => the function or reason who calls the exit function
  # 2 => the exitcode to be used
  EREASON=$1
  ECODE=$2
  
  F_ECHOLOG "EXIT: $EREASON with code $ECODE" $LOG
  
  # TODO (optional): do any other actions
  exit $ECODE
}

# update FWUL version
F_UPDVER(){
    # takes 2 arguments
    # 1 (req) => version number to write
    # 2 (opt) => patchlevel

    NEWVER="$1"
    NEWLEV="$2"
    [ -z "$NEWVER" ] && F_ERR "Missing new version id" && F_EXIT $FUNCNAME 3
    [ -f "$RELEASE" ] && F_ERR "Missing FWUL release file!!" && F_EXIT $FUNCNAME 3

    # set main version
    cp $RELEASE ${RELEASE}.old && sed -i "s/fwulversion=.*/fwulversion=$NEWVER/g" $RELEASE
    if [ $? -ne 0 ];then
        F_ERR "while trying to change FWUL version to $NEWVER"
        cp ${RELEASE}.old $RELEASE
        F_EXIT $FUNCNAME 4
    else
        F_LOG "updated FWUL version to $NEWVER successfully" $LOG
    fi

    # set patch level
    if [ ! -z "$NEWLEV" ];then
        grep patchlevel $RELEASE >> /dev/null 2>&1
        if [ $? -eq 0 ];then
            sed -i "s/patchlevel=.*/patchlevel=$NEWLEV/g" $RELEASE
        else
            echo "patchlevel=$NEWLEV" >> $RELEASE
        fi
        if [ $? -ne 0 ];then
            F_ERR "while trying to change FWUL patchlevel to $NEWLEV"
            cp ${RELEASE}.old $RELEASE
            F_EXIT $FUNCNAME 4
        else
            F_LOG "updated FWUL version to $NEWLEV successfully" $LOG
        fi
    fi
}
